#!usr/bin/env/python3
from abc import ABC, abstractmethod
class Vehicle(ABC):
    @abstractmethod
    def drive(self):
        pass
class ElectricVehicle(ABC):
    @abstractmethod
    def charge(self):
        pass
class GasVehicle(ABC):
    @abstractmethod
    def refuel(self):
        pass
class HybridCar(Vehicle,ElectricVehicle,GasVehicle):
    def charge(self):
        print("Hybrid Car is charging.")
    def refuel(self):
        print("Hybrid car is refueling.") 
    def drive(self):
        print("Hybrid car is driving.")
class ElectricalCar(Vehicle,ElectricVehicle):
    def charge(self):
        print("Electrical car is charging.")
    def drive(self):
        print("Electric Car is driving.")
hybridcar = HybridCar()
hybridcar.charge()
hybridcar.refuel()
hybridcar.drive()
electriccar = ElectricalCar()
electriccar.charge()
electriccar.drive()
